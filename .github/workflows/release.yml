---
name: Release

on:
  push:
    tags: ["v*"]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  assets:
    name: Assets
    needs: release
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
          - os: macos-latest
            goos: darwin
          - os: windows-latest
            goos: windows
    runs-on: ${{ matrix.os }}
    env:
      asset: terraform-provider-argocd_${{ github.ref }}_${{ matrix.goos }}_${{ matrix.arch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go
      - name: Restore Go cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build ${{ matrix.goos }}-${{ matrix.arch }}
        env:
          GOLDFLAGS: "-s -w"
          GOARCH:  ${{ matrix.arch }}
          GOOS: ${{ matrix.goos }}
        run: go build -o ${{ env.asset }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ env.asset }}
          asset_name: ${{ env.asset }}
          asset_content_type: application/octet-stream
---
name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: Set up Go
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
      with:
        go-version-file: 'go.mod'
      id: go
      
    - name: Run linters
      uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5 # v3.4.0
      with:
        version: v1.51.2

    - name: Generate
      run: make generate

    - name: Confirm no diff
      run: |
        git diff --compact-summary --exit-code || \
          (echo "*** Unexpected differences after code generation. Run 'make generate' and commit."; exit 1)
          
    - name: Build
      run: make build

  acceptance_tests:
    name: Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        argocd_version: ["v2.4.0", "v2.4.28", "v2.5.0", "v2.5.16", "v2.6.0", "v2.6.7"]
    steps:
      - name: Check out code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Install Kustomize
        run: |
          curl -sL "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod +x ./kustomize

      - name: Install Kind 0.11.1
        run: |
          curl -sLo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-$(uname)-amd64
          chmod +x ./kind

      - name: Set up ArgoCD ${{ matrix.argocd_version }}
        env:
          ARGOCD_VERSION: ${{ matrix.argocd_version }}
          ARGOCD_CI: true
        run: |
          sh scripts/testacc_prepare_env.sh
          until $(nc -z 127.0.0.1 8080); do sleep 2;done
          netstat -tulpn

      - name: Run acceptance tests
        env:
          ARGOCD_VERSION: ${{ matrix.argocd_version }}
        run: make testacc
